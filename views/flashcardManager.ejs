<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>FlashX | Flashcard hub</title>
  <base href="/manager/">
  <script>
    const addClickListener = (target, route, method, payload, ...inputs) => {
      const attach = handler =>
        target.addEventListener('click', handler, { once: true });

      const handler = async event => {
        let reloading = false;

        try {
          for (const input of inputs) {
            if (!input.reportValidity()) return;
            payload[input.name] = input.value;
          }

          const response = await fetch(`/api/${route}`, {
            method,
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
          });

          if (response.status === 204) {
            reloading = true;
            location.reload();
          } else {
            console.error(await response.text());
            alert('Operation failed.');
          }
        } catch (err) {
          console.error(err);
          alert('Network error');
        } finally {
          if (!reloading) attach(handler);
        }
      };
      attach(handler);
    }
  </script>
</head>

<body>
  <%- include('/nav', { authenticated }) %>
  <h1>FlashX</h1>
  <h2>Welcome <%= user %>!</h2>
  <label>Name
    <input required maxlength="256" id="name" name="name">
  </label>
  <button type="button" id="createFSet">Create a flashcard collection</button>
  <script type="module">
    const button = document.getElementById('createFSet');
    const name = document.getElementById('name');

    addClickListener(button, 'fset', 'POST', {}, name);

    name.addEventListener('keyup', event => {
      if (event.key === 'Enter') button.click();
    });
  </script>
  <% if (fsets.length) { %>
  <ol id="fsets">
    <% fsets.forEach((fset, index) => { %>
    <li><a href="<%= index %>"><%= fset %></a></li>
    <% }); %>
  </ol>
  <template id="delete"><button type="button">Delete</button></template>
  <script type="module">
    const deleteButton = document.getElementById('delete').content.firstChild;

    const listItems = document.getElementById('fsets').children;

    Array.prototype.forEach.call(listItems, (li, index) => {
      const buttonClone = deleteButton.cloneNode(true);

      addClickListener(buttonClone, 'fset', 'DELETE', { index });
      li.appendChild(buttonClone);
    });
  </script>
  <% } %>
</body>

</html>
