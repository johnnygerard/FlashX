<template id="pwdContainer">
  <style>
    :host {
      margin-bottom: 2em;
      position: relative;
      font-family: 'PT Mono', monospace;
    }

    ::slotted(*) {
      padding-right: 4em !important;
    }

    button {
      all: unset;
      cursor: pointer;
      padding: 0.5em 1em;
      position: absolute;
      right: 0;
      top: 50%;
      transform: translate(0, -50%);
    }

    button:focus-visible {
      outline: 2px solid black;
      outline-offset: -0.5em;
      border-radius: 1em;
    }

    img {
      height: 2em;
      width: 2em;
    }

    img:not([hidden]) {
      display: block;
    }

  </style>
  <slot name="input"></slot>
  <button type="button">
    <img src="eye-icon-show-32px.png" alt="show password" width="32"
        height="32">
    <img src="eye-icon-hide-32px.png" alt="hide password" width="32" height="32"
        hidden>
  </button>
</template>
<script type="module">
  class CustomElement extends HTMLElement {
    constructor() {
      super();
      const shadowRoot = this.attachShadow({ mode: 'closed' });
      const fragment = document.getElementById('pwdContainer').content;

      shadowRoot.appendChild(fragment);

      const button = shadowRoot.querySelector('button');
      const eyeIconShow = button.querySelector(':not([hidden])');
      const eyeIconHide = button.querySelector('[hidden]');

      button.addEventListener('click', event => {
        if (password.type === 'password') {
          password.type = 'text';
          eyeIconShow.style.display = 'none';
          eyeIconHide.style.display = 'block';
        } else {
          password.type = 'password';
          eyeIconShow.style.display = 'block';
          eyeIconHide.style.display = 'none';
        }
      });
    }
  }

  customElements.define('x-password', CustomElement);
</script>
